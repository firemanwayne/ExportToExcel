@page "/"

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}
<div class="row">
    <div class="col-6">
        <ExcelExport ButtonText=@ButtonText
                     ButtonClass="btn btn-outline-success btn-excel"
                     TValue=WeatherForecast
                     RequestDelegate=GetData />
    </div>
</div>

@code {

    string ButtonText = "Export Weather Data";

    WeatherForecast[] forecasts;

    [Inject] WeatherForecastService ForecastService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }

    /// <summary>
    /// Data retrieval method
    /// </summary>
    /// <returns></returns>
    IEnumerable<WeatherForecast> GetData() => forecasts ?? Enumerable.Empty<WeatherForecast>();
}